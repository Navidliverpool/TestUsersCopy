@model TestUsersCopy.Models.MotorcycleVM

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm("Create", "Motorcycles", FormMethod.Post,
                        new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
<div class="form-horizontal">
    <h4>Motorcycle</h4>
    <hr />
    <span>
        <label>Upload Image</label>
        <br />
        <input type="file" name="image" id="image" />
    </span>


    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.Motorcycle.MotorcycleId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Motorcycle.MotorcycleId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Motorcycle.MotorcycleId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Motorcycle.Model, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Motorcycle.Model, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Motorcycle.Model, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Motorcycle.Price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Motorcycle.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Motorcycle.Price, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Motorcycle.Brand, "Brand", new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Motorcycle.Brand.Name, (IEnumerable<SelectListItem>)ViewBag.BrandId, null, new { @class = "form-control" })

            @Html.ValidationMessageFor(model => model.Motorcycle.Brand)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Motorcycle.Category, "Category", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Motorcycle.Category.MotoCategory, (IEnumerable<SelectListItem>)ViewBag.CategoryId, null, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Motorcycle.Category, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
        @Html.LabelFor(model => model.AllDealers, "Dealers", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.AllDealers, (IEnumerable<SelectListItem>)ViewBag.Dealers, null, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.AllDealers, "", new { @class = "text-danger" })
        </div>
    </div>*@

    <div class="form-group">
            @Html.LabelFor(model => model.AllDealers, "Dealers", new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.ListBoxFor(m => m.AllDealers, new SelectList(Model.AllDealers, "Value", "Text", Model.AllDealers))
            @*@Html.ListBoxFor(m => m.AllDealers, (IEnumerable<SelectListItem>)ViewBag.Dealers)*@

            @*@Html.ListBoxFor(m => m.AllDealersTest, IEnumerable<SelectListItem>)ViewBag.CategoryId)*@
        </div>
        </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
